module gtk;

macro import gtk.macro_;

public import gtk(glib);
public import gtk(gtk);
public import gtk(libs);

// TODO deprecated
alias connectSignal = connectSignal0;

void connectSignal0(GObject instance, string signal, void delegate() handler) {
    import std.string : toStringz;

    mut auto state = cast(CallbackState0*) calloc(sizeof(CallbackState0), 1);
    state.dg = handler;
    g_signal_connect_data(
        cast(void*) instance, signal.toStringz, cast(void function()) &callSignal0, state,
        cast(void function(void*, GClosure*)) null, 0);
}

private struct CallbackState0 {
    void delegate() dg;
}

private void callSignal0(void* widget, void* ptr) {
    auto state = cast(CallbackState0*) ptr;
    state.dg();
}

void connectSignal1(T)(GObject instance, string signal, void delegate(T) handler) {
    import std.string : toStringz;

    mut auto state = cast(CallbackState1!T*) calloc(sizeof(CallbackState1!T), 1);
    state.dg = handler;
    g_signal_connect_data(
        cast(void*) instance, signal.toStringz, cast(void function()) &callSignal1!T, state,
        cast(void function(void*, GClosure*)) null, 0);
}

private struct CallbackState1(T) {
    void delegate(T) dg;
}

private void callSignal1(T)(void* widget, T arg, void* ptr) {
    auto state = cast(CallbackState1!T*) ptr;
    state.dg(arg);
}

alias GObject = defGlibClass("GObject");
alias Widget = defGlibClass("GtkWidget", GObject);
alias Container = defGlibClass("GtkContainer", Widget);

alias Bin = defGlibClass("GtkBin", Container);
alias Window = defGlibClass("GtkWindow", Bin);
alias Dialog = defGlibClass("GtkDialog", Window);
alias AboutDialog = defGlibClass("GtkAboutDialog", Dialog);
alias AppChooserDialog = defGlibClass("GtkAppChooserDialog", Dialog);
alias ColorChooserDialog = defGlibClass("GtkColorChooserDialog", Dialog);
alias ColorSelectionDialog = defGlibClass("GtkColorSelectionDialog", Dialog);
alias FileChooserDialog = defGlibClass("GtkFileChooserDialog", Dialog);
alias FontChooserDialog = defGlibClass("GtkFontChooserDialog", Dialog);
alias FontSelectionDialog = defGlibClass("GtkFontSelectionDialog", Dialog);
alias MessageDialog = defGlibClass("GtkMessageDialog", Dialog);
alias RecentChooserDialog = defGlibClass("GtkRecentChooserDialog", Dialog);
alias ApplicationWindow = defGlibClass("GtkApplicationWindow", Window);
alias Assistant = defGlibClass("GtkAssistant", Window);
alias OffscreenWindow = defGlibClass("GtkOffscreenWindow", Window);
alias Plug = defGlibClass("GtkPlug", Window);
alias ShortcutsWindow = defGlibClass("GtkShortcutsWindow", Window);
alias ActionBar = defGlibClass("GtkActionBar", Bin);
alias Alignment = defGlibClass("GtkAlignment", Bin);
alias ComboBox = defGlibClass("GtkComboBox", Bin);
alias AppChooserButton = defGlibClass("GtkAppChooserButton", ComboBox);
alias ComboBoxText = defGlibClass("GtkComboBoxText", ComboBox);
alias Frame = defGlibClass("GtkFrame", Bin);
alias AspectFrame = defGlibClass("GtkAspectFrame", Frame);
alias Button = defGlibClass("GtkButton", Bin);
alias ToggleButton = defGlibClass("GtkToggleButton", Button);
alias CheckButton = defGlibClass("GtkCheckButton", ToggleButton);
alias RadioButton = defGlibClass("GtkRadioButton", CheckButton);
alias MenuButton = defGlibClass("GtkMenuButton", ToggleButton);
alias ColorButton = defGlibClass("GtkColorButton", Button);
alias FontButton = defGlibClass("GtkFontButton", Button);
alias LinkButton = defGlibClass("GtkLinkButton", Button);
alias LockButton = defGlibClass("GtkLockButton", Button);
alias ModelButton = defGlibClass("GtkModelButton", Button);
alias ScaleButton = defGlibClass("GtkScaleButton", Button);
alias VolumeButton = defGlibClass("GtkVolumeButton", ScaleButton);
alias MenuItem = defGlibClass("GtkMenuItem", Bin);
alias CheckMenuItem = defGlibClass("GtkCheckMenuItem", MenuItem);
alias RadioMenuItem = defGlibClass("GtkRadioMenuItem", CheckMenuItem);
alias ImageMenuItem = defGlibClass("GtkImageMenuItem", MenuItem);
alias SeparatorMenuItem = defGlibClass("GtkSeparatorMenuItem", MenuItem);
alias TearoffMenuItem = defGlibClass("GtkTearoffMenuItem", MenuItem);
alias EventBox = defGlibClass("GtkEventBox", Bin);
alias Expander = defGlibClass("GtkExpander", Bin);
alias FlowBoxChild = defGlibClass("GtkFlowBoxChild", Bin);
alias HandleBox = defGlibClass("GtkHandleBox", Bin);
alias ListBoxRow = defGlibClass("GtkListBoxRow", Bin);
alias ToolItem = defGlibClass("GtkToolItem", Bin);
alias ToolButton = defGlibClass("GtkToolButton", ToolItem);
alias MenuToolButton = defGlibClass("GtkMenuToolButton", ToolButton);
alias ToggleToolButton = defGlibClass("GtkToggleToolButton", ToolButton);
alias RadioToolButton = defGlibClass("GtkRadioToolButton", ToggleToolButton);
alias SeparatorToolItem = defGlibClass("GtkSeparatorToolItem", ToolItem);
alias Overlay = defGlibClass("GtkOverlay", Bin);
alias ScrolledWindow = defGlibClass("GtkScrolledWindow", Bin);
alias PlacesSidebar = defGlibClass("GtkPlacesSidebar", ScrolledWindow);
alias Popover = defGlibClass("GtkPopover", Bin);
alias PopoverMenu = defGlibClass("GtkPopoverMenu", Popover);
alias Revealer = defGlibClass("GtkRevealer", Bin);
alias SearchBar = defGlibClass("GtkSearchBar", Bin);
alias StackSidebar = defGlibClass("GtkStackSidebar", Bin);
alias Viewport = defGlibClass("GtkViewport", Bin);

alias Box = defGlibClass("GtkBox", Container);
alias AppChooserWidget = defGlibClass("GtkAppChooserWidget", Box);
alias ButtonBox = defGlibClass("GtkButtonBox", Box);
alias HButtonBox = defGlibClass("GtkHButtonBox", ButtonBox);
alias VButtonBox = defGlibClass("GtkVButtonBox", ButtonBox);
alias ColorChooserWidget = defGlibClass("GtkColorChooserWidget", Box);
alias ColorSelection = defGlibClass("GtkColorSelection", Box);
alias FileChooserButton = defGlibClass("GtkFileChooserButton", Box);
alias FileChooserWidget = defGlibClass("GtkFileChooserWidget", Box);
alias FontChooserWidget = defGlibClass("GtkFontChooserWidget", Box);
alias FontSelection = defGlibClass("GtkFontSelection", Box);
alias HBox = defGlibClass("GtkHBox", Box);
alias InfoBar = defGlibClass("GtkInfoBar", Box);
alias RecentChooserWidget = defGlibClass("GtkRecentChooserWidget", Box);
alias ShortcutLabel = defGlibClass("GtkShortcutLabel", Box);
alias ShortcutsGroup = defGlibClass("GtkShortcutsGroup", Box);
alias ShortcutsSection = defGlibClass("GtkShortcutsSection", Box);
alias ShortcutsShortcut = defGlibClass("GtkShortcutsShortcut", Box);
alias StackSwitcher = defGlibClass("GtkStackSwitcher", Box);
alias Statusbar = defGlibClass("GtkStatusbar", Box);
alias VBox = defGlibClass("GtkVBox", Box);

alias Fixed = defGlibClass("GtkFixed", Container);
alias FlowBox = defGlibClass("GtkFlowBox", Container);
alias Grid = defGlibClass("GtkGrid", Container);
alias Paned = defGlibClass("GtkPaned", Container);
alias HPaned = defGlibClass("GtkHPaned", Paned);
alias VPaned = defGlibClass("GtkVPaned", Paned);
alias HeaderBar = defGlibClass("GtkHeaderBar", Container);
alias IconView = defGlibClass("GtkIconView", Container);
alias Layout = defGlibClass("GtkLayout", Container);
alias ListBox = defGlibClass("GtkListBox", Container);
alias MenuShell = defGlibClass("GtkMenuShell", Container);
alias Menu = defGlibClass("GtkMenu", MenuShell);
alias RecentChooserMenu = defGlibClass("GtkRecentChooserMenu", Menu);
alias MenuBar = defGlibClass("GtkMenuBar", MenuShell);
alias Notebook = defGlibClass("GtkNotebook", Container);
alias Socket = defGlibClass("GtkSocket", Container);
alias Stack = defGlibClass("GtkStack", Container);
alias Table = defGlibClass("GtkTable", Container);
alias TextView = defGlibClass("GtkTextView", Container);
alias ToolItemGroup = defGlibClass("GtkToolItemGroup", Container);
alias ToolPalette = defGlibClass("GtkToolPalette", Container);
alias Toolbar = defGlibClass("GtkToolbar", Container);
alias TreeView = defGlibClass("GtkTreeView", Container);

alias Misc = defGlibClass("GtkMisc", Widget);
alias Label = defGlibClass("GtkLabel", Misc);
alias AccelLabel = defGlibClass("GtkAccelLabel", Label);
alias Arrow = defGlibClass("GtkArrow", Misc);
alias Image = defGlibClass("GtkImage", Misc);
alias Calendar = defGlibClass("GtkCalendar", Widget);
alias CellView = defGlibClass("GtkCellView", Widget);
alias DrawingArea = defGlibClass("GtkDrawingArea", Widget);
alias Entry = defGlibClass("GtkEntry", Widget);
alias SearchEntry = defGlibClass("GtkSearchEntry", Entry);
alias SpinButton = defGlibClass("GtkSpinButton", Entry);
alias GLArea = defGlibClass("GtkGLArea", Widget);
alias HSV = defGlibClass("GtkHSV", Widget);
alias Range = defGlibClass("GtkRange", Widget);
alias Scale = defGlibClass("GtkScale", Range);
alias HScale = defGlibClass("GtkHScale", Scale);
alias VScale = defGlibClass("GtkVScale", Scale);
alias HScrollbar = defGlibClass("GtkHScrollbar", Range);
alias VScrollbar = defGlibClass("GtkVScrollbar", Range);
alias Separator = defGlibClass("GtkSeparator", Widget);
alias HSeparator = defGlibClass("GtkHSeparator", Separator);
alias VSeparator = defGlibClass("GtkVSeparator", Separator);
alias Invisible = defGlibClass("GtkInvisible", Widget);
alias LevelBar = defGlibClass("GtkLevelBar", Widget);
alias ProgressBar = defGlibClass("GtkProgressBar", Widget);
alias Spinner = defGlibClass("GtkSpinner", Widget);
alias Switch = defGlibClass("GtkSwitch", Widget);

alias Adjustment = defGlibClass("GtkAdjustment", GObject);
alias CellArea = defGlibClass("GtkCellArea", GObject);
alias CellAreaBox = defGlibClass("GtkCellAreaBox", CellArea);
alias CellRenderer = defGlibClass("GtkCellRenderer", GObject);
alias CellRendererText = defGlibClass("GtkCellRendererText", CellRenderer);
alias CellRendererAccel = defGlibClass("GtkCellRendererAccel", CellRendererText);
alias CellRendererCombo = defGlibClass("GtkCellRendererCombo", CellRendererText);
alias CellRendererSpin = defGlibClass("GtkCellRendererSpin", CellRendererText);
alias CellRendererPixbuf = defGlibClass("GtkCellRendererPixbuf", CellRenderer);
alias CellRendererProgress = defGlibClass("GtkCellRendererProgress", CellRenderer);
alias CellRendererSpinner = defGlibClass("GtkCellRendererSpinner", CellRenderer);
alias CellRendererToggle = defGlibClass("GtkCellRendererToggle", CellRenderer);
alias FileFilter = defGlibClass("GtkFileFilter", GObject);
alias RecentFilter = defGlibClass("GtkRecentFilter", GObject);
alias TreeViewColumn = defGlibClass("GtkTreeViewColumn", GObject);
alias GlibObject = GObject;

alias Pixbuf = defGlibClass("GdkPixbuf", GObject);
alias StyleContext = defGlibClass("GtkStyleContext", GObject);
